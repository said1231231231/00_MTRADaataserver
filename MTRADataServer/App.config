<?xml version="1.0" encoding="utf-8" ?>
<configuration>
  <system.diagnostics>
    <sources>
      <!-- DefaultSource используется My.Application.Log
            для записи сообщений -->
      <!--source - Задает источник трассировки, инициирующий сообщения трассировки-->
      <source name="AppDiagnosticLog" switchName="SourceSwitch">

        <!-- Секция listeners определяет, куда записывать
                сообщения. Я задаю файл и журнал событий. -->
        <listeners>
          <!--add name="FileLog"/-->
          <add name="textListener"/>
          <add name="console"/>
          <!--add name="EventLog"/-->
        </listeners>
      </source>
      <source name="System.Net.Sockets">
        <listeners>
          <add name="Sockets"/>
        </listeners>
      </source>
    </sources>
    <switches>
      <!-- Секция switches определяет, когда TraceSource включен
        или выключен. Здесь я указываю, что My.Application.Log
        включен для всех сообщений с уровнем значимости
        большим или равным уровню Information.
        Off - Запрещает передачу любых событий - Не выводить сообщения трассировки и отладки. 
		Critical - Разрешает передачу только событий типа Critical. 
        Error - Выводить сообщения обработки ошибок - Разрешает передачу только событий типа Critical и Error. 
        Warning - Выводить предупреждения и сообщения обработки ошибок - Разрешает передачу событий типа Critical, Error и Warning. 
		Information - Выводить информационные сообщения, предупреждения и сообщения обработки ошибок - Разрешает передачу событий типа Critical, Error, Warning и Information. 
        Verbose - Выводить все сообщения отладки и трассировки- Разрешает передачу событий типа Critical, Error, Warning, Information и Verbose.
		ActivityTracing - Разрешает передачу событий типа Stop, Start, Suspend, Transfer и Resume. 
		All - Разрешает передачу всех событий
     -->
      <add name="SourceSwitch" value="Warning"/>
      <add name="System.Net.Sockets" value="15"/>
      <!-- value - битовая маска, каждый бит которой представляет разный уровень протоколирования:
          0x10 - сетевой трафик,
          0x8 - вход в методы и выход из них, 
          0x4 - предупреждения,
          0x2 - ошибки;
          0x1 - критические события
          0x1f - все вместе (31)
          0xf - без сетевого трафика (15)
          -->
    </switches>

    <!-- Слушатели записывают сообщения в журнал. -->
    <sharedListeners>
      <!--add name="FileLog" type=
           "Microsoft.VisualBasic.Logging.FileLogTraceListener"
          initializeData="FileLogWriter">
      </add-->
      <!--add name="EventLog" type="System.Diagnostics.EventLogTraceListener"
          initializeData="My Customization Example"-->

      <!-- Добавив фильтр, я настроил слушатель на запись
                лишь подмножества сообщений. Здесь в Event Log
                добавляются только критические сообщения.-->
      <!--filter type="System.Diagnostics.EventTypeFilter"
            initializeData="Critical"/>
      </add-->
      <add name="textListener" type="System.Diagnostics.XmlWriterTraceListener" initializeData="AppDiagnosticLog.log">
        <filter type="System.Diagnostics.EventTypeFilter" initializeData="Verbose"/>
      </add>
      <add name="console" type="System.Diagnostics.ConsoleTraceListener">
        <filter type="System.Diagnostics.EventTypeFilter" initializeData="Verbose"/>
      </add>
      <add name="Sockets" type="System.Diagnostics.TextWriterTraceListener" initializeData="Sockets.log"/>
    </sharedListeners>
    <!--trace -  для форматирования выходных данных трассировки-->
    <!-- indentsize - Число пробелов в отступе. По умолчанию используется значение 4.-->
    <trace autoflush="true" indentsize="3"/>
  </system.diagnostics>
  <startup> 
        <supportedRuntime version="v4.0" sku=".NETFramework,Version=v4.5" />
    </startup>
</configuration>